li{
    color:#0C95F7;
    font-family: Arial;
    font-size: 16px;
    font-style: normal;
    font-weight: bold;
    border-radius: 10px 10px;
    box-shadow: #444 5px 10px 10px;
    transform: skew(-30deg);
    letter-spacing: 3px; /* espacio entre letras  */
    word-spacing: 10px; /* esacio entre palabras  */
    line-height: 20px;
    text-align: center; 
    text-decoration: overline;
    text-indent: 20px; /* sangria  */
    text-transform: capitalize;  /* primera letra mauscula */
    padding: 5px 5px 5px 5px;
    border: 5px solid #FF7700;
    margin: 10px 10px 10px 10px;
    max-width: 70%;
    min-width:20%;
    height: auto;
    background: #CCCCCC
    
}
ol{
    list-style: upper-roman; /* tipo de vi単etas de lista  */
}

.boton{
    box-shadow: #000 1px 1px 1px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;

}

.boton:active{
    transform: translateX(1px) translateY(1px);
    box-shadow: #FFF 0px 0px 0px;
}


a img{
    /*margin-left:500px;*/
    float: right; 
}

h1:first-letter{
    font-size: 50px;
    color: red;
    font-style: italic;

}




/*
* {

  
  box-sizing: border-box;
  border-box define el tama単o total de la caja en 
  el tama単o dado es decir si colocamos 100 px esto
  da igual a la suma de pading, content y border

  box-sizing: content-box;
  por default lo que uilizan las cajas en html
  es decir lo que y defina es o que tomar al final
  como la suma de los valores que le di a a caja
 
 Fondo
    background-color: color (Deine el color de fondo)
    background-image: url ("relativa/absoluta") define una imagen de fondo
    background-repeat: no-repeat; no repite en mosaico la imagen
    background-repeat: repeat-x; repite solo en x
    background-repeat: repeat-y; repite solo en y
    background-position: top left; coloca la imagen donde la quieras colocar puede ser tanto top bottom o center como una cordenada numerica
    background-attachment: scroll; a iamgen sigue el scroll del mouse
    background-attachment: fixed; la imagen se queda fija
   
   
   
   }
   selector+seector {} adyasente por ej:
   h1+p{} aplicara a todos los p que vengan despues de un h1

 border-radius
    redondea los borders

 box-shadow: color longitud corrimiento x corrimiento en y, blur (difuminacion), inset(la sombra debe ir adentro de la caja, opcional);

    perimite agregar sombra a una caja
    
    ej:
    
        box-sadow: #000000 10px 0px 0px inset


 text-shadow: 0px 3px 1px #000; (al igual que box-shadow pero a texto)


 transform:
    permite rotar, transladar un elento

        rotate(45deg) transtlate(X o Y)(45px)  skew (inclianacion) 

        ej:

        transform: tanslateX(15px) rotate(90deg);

trasition propiedad tiempo

    permite reaizar una transicion en el cambio de estado por ej para una pseudo clase como hover, es importante recordar que se apica sobre la clase
    y no sobre la pseudo clase. tambien puede resivir el valor all como propidad

            ej:
 
                transition: background-color 500ms; //en caso de que estemos cambiando el color de fondo

content

    content: "contenido";

            agrega un contenido como decicion de dise単o

Valores:

 hsl(hiuge, saturaion, lightnes); // color hsl

 rgba(red(0-255),green(0-255), blue(0-255), transparenci) //color rgb con transparencia



seudo-clases 

selector:first-child  first-child afecta a todos los sectores que son primeros hijos de otra clase
h1 p:first-child afecta a todos los primeros p de h1

selector:last-child
funciona igual que el anterior pero con el ultimo

nth-child

selector:nth-child(numero de hijo)

    permite editar al hijo seleccionado

    ej:

    div p:nth-child(3) //seleciona al 3 p que deciende de un div

 nth-of-type

 selector:nth-of-type(numero)

    permite modificar al hio selecionado del tipo del seector

 first-line 

    selector:first-line 

        permite editar la primera linea de texto

 first-letter

    selector:first-letter

        permite editar la primera letra 

 not

    selector:not(selector)
         
         permite modificar todos los elementos menos el (selecionado)

         ej:

         div:not(.encabezado)

empty

    selector:empty

        permite aplicar una propiedad siempre que el selector este vacio
before

        selector:before
            permite aplicar una propiedad antes del selector como por ej content para agregar agun contenido antes
            nota: ::before es un pseudo-elemento pero no es compatible con todos los navegadores

after
        selector:after
            permite aplicar una propiedad antes del selector como por ej content para agregar agun contenido despues
            nota: ::after es un pseudo-elemento pero no es compatible con todos los navegadores
lang
p:lang(es) {

}
lang afecta por ej n este caso a todos los p con lang="es"

focus 
ej:
input:focus{
border: 1px solid #00FF00;
}
 coloca un borde verde sobre el campo que se esta aciendo foco

Enabled
ej:
input:enabled {

}
 sirve para editar el contenid habilitados

form:enabled select,form:enabled input{
color:#000;
  border-bottom: 1px solid #cbcbcb;
}

Disable 
 sirve para editar el contenido desabilitado

input:disabled {

}


prefijos:

sirven para agregar a una propiedad y evitar problemas de compatibilidad con ciertos navegadores

-ms- microsoft
-o- opera
-moz- mozila
-webkit- safari

Operadores

=  verifica que el contenido sea el mismo ej: a[href="http://www.google.com"]
~= verifica que sea uno de los valores espesificadons en el html sive para selectores multiples como las class ej: a[class~="button"]
|= verifica que el valor contenga a palabra or si posee un - luego ej: li[class|="nav"]
^= verifica que comienze con ... ej: a[href^="http://"]
$= verifica que termine con .... ej: p[class$="-error"] 
*= verifica que contenga ..... ej: a[class*="button"]

*/